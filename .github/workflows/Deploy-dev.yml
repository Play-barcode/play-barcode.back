# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - dev

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: play-barcode-dev
  IMAGE: play-barcode-dev
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  SPRING_ACTIVE_PROFILE: ${{ secrets.SPRING_ACTIVE_PROFILE }}
  MYSQL_URL: ${{ secrets.MYSQL_URL }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # - name: Build with Gradle
      #   run: ./gradlew jib
      ## 데이터베이스 연결 문제로 빌드가 안 되는 것 같음. 나중에 제대로 연결해서 빌드해볼 것.

      - name: Setup Google Cloud CLI    # Google Cloud와 연결
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GCP_SA_KEY}} # json으로 저장했던 key
          project_id: ${{secrets.GCP_PROJECT_ID}} # secrets 환경 변수에 설정했던 프로젝트 ID

      - name: Set up Kustomize # Kustomize 설치
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: GKE Deploy # deployment와 service(LoadBalancer) 구축
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
