name: Build and Deploy to GKE

on:
  push:
    branches:
      - dev

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: play-barcode-dev
  IMAGE: play-barcode-dev
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  SPRING_ACTIVE_PROFILE: ${{ secrets.SPRING_ACTIVE_PROFILE }}
  MYSQL_URL: ${{ secrets.MYSQL_URL }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Google Cloud SDK
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install apt-transport-https ca-certificates -y
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk -y

      - name: Authenticate to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GCP_SA_KEY}}
          project_id: ${{secrets.GCP_PROJECT_ID}}


      - name: Build with Gradle
        run: ./gradlew clean build -x test    # test 코드 제외

      # Build the Docker image
      - name: Build Docker Image
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker image to Google Artifact Registry
      - name: Publish Image to Artifact Registry
        run: |-
          gcloud auth configure-docker
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Kustomize
        run: |
          sudo curl -o /usr/local/bin/kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          sudo chmod u+x /usr/local/bin/kustomize

      - name: Check k8s directory
        run: |
          ls -la ./k8s

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
#
      - name: Create Kubernetes secret for GCR
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > gcp-sa-key.json
          kubectl create secret docker-registry regcred \
            --docker-server=https://gcr.io \
            --docker-username=_json_key \
            --docker-password="$(cat gcp-sa-key.json)" \
            --docker-email=${{ secrets.GKE_CLIENT_EMAIL }}


      - name: GKE Deploy with Pull image from Docker
        working-directory: ./k8s
        run: |
          /usr/local/bin/kustomize build . | kubectl apply -f -
          kubectl set image deployment/$DEPLOYMENT_NAME play-barcode-dev=play-barcode-dev:v1
          kubectl get pods
          kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=5m
          kubectl get services -o wide
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
